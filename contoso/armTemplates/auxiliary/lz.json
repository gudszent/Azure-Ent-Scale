{
    "$schema": "https://schema.management.azure.com/schemas/2019-08-01/tenantDeploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "topLevelManagementGroupPrefix": {
            "type": "string",
            "maxLength": 5
        },
        "enableVmBackup": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denyIpForwarding": {
            "type": "string",
            "defaultValue": "No",
            "allowedValues": [
                "Yes",
                "No"
            ]
        },
        "denySubnetWithoutNsg": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "GDPRAllowedEurope": {
            "type": "string",
            "defaultValue": "No"
        },
        "isAllowedSize": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        },
        "AllowedSize": {
            "type": "array",
            "defaultValue": []
        },
        "enableTaglz": {
            "type": "string",
            "allowedValues": [
                "Yes",
                "No"
            ],
            "defaultValue": "No"
        }

    },
    "variables": {
        "scope": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '-landingzones')]",
        "policyDefinitions": {
            "deployVmBackup": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policyDefinitions/Deploy-AzureBackup-on-VM')]",
            "denySubnetWithoutNsg": "[concat('/providers/Microsoft.Management/managementGroups/', parameters('topLevelManagementGroupPrefix'), '/providers/Microsoft.Authorization/policyDefinitions/Deny-Subnet-Without-Nsg')]",
            "denyIpForwarding": "/providers/Microsoft.Authorization/policyDefinitions/88c0b9da-ce96-4b03-9635-f29a937e2900",
            "GDPRAllowedEurope": "/providers/Microsoft.Authorization/policyDefinitions/e56962a6-4747-49cd-b67b-bf8b01975c4c",
            "AllowedSize": "/providers/Microsoft.Authorization/policyDefinitions/cccc23c7-8427-4f53-ad12-b6a63eb452b3",
            "tagfromsubscription": "/providers/Microsoft.Authorization/policyDefinitions/b27a0cbd-a167-4dfa-ae64-4337be671140"
        },
        "policyAssignmentNames": {
            "deployVmBackup": "Deploy-VM-Backup",
            "denySubnetWithoutNsg": "Deny-Subnet-Without-Nsg",
            "denyIpForwarding": "Deny-IP-forwarding",
            "GDPRAllowedEurope": "Eu-location-allowed",
            "AllowedSize": "Allowed-VM-Size",
            "tagfromsubscription": "Tag-From-subscription"
        },
        "rbacOwner": "8e3af657-a8ff-443c-a75c-2fe8c4bcb635",
        "roleAssignmentNames": {
            "deployVmBackup": "[guid(concat(parameters('toplevelManagementGroupPrefix'),variables('policyAssignmentNames').deployVmBackup))]"
        },
        "listOfAllowedLocations_array": {
            "listOfAllowedLocations": {
                "value": [ "NorthEurope", "WestEurope", "Europe" ]
            }
        },
        "listOfAllowedSKUs_array": {
            "listOfAllowedSKUs": {
                "value": "[parameters('AllowedSize')]"
            }
        }
    },

    "resources": [
        {
            "condition": "[equals(parameters('enableVmBackup'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').deployVmBackup]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "Deploy-VM-Backup",
                "displayName": "Deploy-VM-Backup",
                "policyDefinitionId": "[variables('policyDefinitions').deployVmBackup]",
                "scope": "[variables('scope')]",
                "parameters": {}
            }
        },
                {
            "condition": "[equals(parameters('enableTaglz'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').tagfromsubscription]",
            "location": "[deployment().location]",
            "identity": {
                "type": "SystemAssigned"
            },
            "properties": {
                "description": "[variables('policyAssignmentNames').tagfromsubscription]",
                "displayName": "[variables('policyAssignmentNames').tagfromsubscription]",
                "policyDefinitionId": "[variables('policyDefinitions').tagfromsubscription]",
                "scope": "[variables('scope')]",
                "parameters": {}
            }
        },
        {
            "condition": "[equals(parameters('enableVmBackup'), 'Yes')]",
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2020-04-01-preview",
            "name": "[variables('roleAssignmentNames').deployVmBackup]",
            "dependsOn": [
                "[variables('policyAssignmentNames').deployVmBackup]"
            ],
            "properties": {
                "principalType": "ServicePrincipal",
                "roleDefinitionId": "[concat('/providers/Microsoft.Authorization/roleDefinitions/', variables('rbacOwner'))]",
                "principalId": "[if(equals(parameters('enableVmBackup'), 'Yes'), toLower(reference(concat('/providers/Microsoft.Authorization/policyAssignments/', variables('policyAssignmentNames').deployVmBackup), '2018-05-01', 'Full' ).identity.principalId), 'na')]"
            }
        },
        {
            "condition": "[equals(parameters('denyIpForwarding'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').denyIpForwarding]",
            "location": "[deployment().location]",
            "properties": {
                "description": "Deny-IP-Forwarding",
                "displayName": "Deny-IP-Forwarding",
                "policyDefinitionId": "[variables('policyDefinitions').denyIpForwarding]",
                "scope": "[variables('scope')]"
            }
        },
        {
            "condition": "[equals(parameters('denySubnetWithoutNsg'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').denySubnetWithoutNsg]",
            "location": "[deployment().location]",
            "properties": {
                "description": "Deny-Subnet-Without-Nsg",
                "displayName": "Deny-Subnet-Without-Nsg",
                "policyDefinitionId": "[variables('policyDefinitions').denySubnetWithoutNsg]",
                "scope": "[variables('scope')]"
            }
        },
        {
            "condition": "[equals(parameters('GDPRAllowedEurope'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').GDPRAllowedEurope]",
            "location": "[deployment().location]",
            "properties": {
                "description": "[variables('policyAssignmentNames').GDPRAllowedEurope]",
                "displayName": "[variables('policyAssignmentNames').GDPRAllowedEurope]",
                "policyDefinitionId": "[variables('policyDefinitions').GDPRAllowedEurope]",
                "scope": "[variables('scope')]",
                "parameters": "[variables('listOfAllowedLocations_array')]"
            }
        },
        {
            "condition": "[equals(parameters('isAllowedSize'), 'Yes')]",
            "type": "Microsoft.Authorization/policyAssignments",
            "apiVersion": "2018-05-01",
            "name": "[variables('policyAssignmentNames').AllowedSize]",
            "location": "[deployment().location]",
            "properties": {
                "description": "[variables('policyAssignmentNames').AllowedSize]",
                "displayName": "[variables('policyAssignmentNames').AllowedSize]",
                "policyDefinitionId": "[variables('policyDefinitions').AllowedSize]",
                "scope": "[variables('scope')]",
                "parameters": "[variables('listOfAllowedSKUs_array')]"
            }
        }
    ],
    "outputs": {}
}
